---
  - name: Make sure we have a 'wheel' group
    group:
      name: wheel
      state: present

  - name: Allow 'wheel' group to have passwordless sudo
    lineinfile:
      dest: /etc/sudoers
      state: present
      regexp: '^%wheel'
      line: '%wheel ALL=(ALL) NOPASSWD: ALL'

  - name: create user with random password
    #register: result_cluster
    user:
      name: "{{ item.name }}"
      password: "{{ lookup('password', 'credentials/' +  item.name  + '/password.txt encrypt=md5_crypt') }}"
      create_home: yes
      home: "{{ item.homedir }}"
      groups: wheel
    loop: "{{ users }}"

  - name: Install JAVA
    yum:
      name: java-1.8.0-openjdk
      state: present

  - name: Download Tomcat
    get_url:
      url: https://archive.apache.org/dist/tomcat/tomcat-9/v9.0.52/bin/apache-tomcat-9.0.52.tar.gz
      dest: /tmp/apache-tomcat-9.0.52.tar.gz 


  - name: Add tomcat group
    group:
      name: tomcat

  - name: Add "tomcat" user
    user:
      name: tomcat
      group: tomcat
      home: /usr/share/tomcat
      createhome: no
      system: yes

  - name: ensure tomcat directory exists
    file:
      path: /usr/share/tomcat
      state: directory

  - name: Extract tomcat archive
    unarchive:
      src: /tmp/apache-tomcat-9.0.52.tar.gz
      dest: /usr/share/tomcat
      owner: tomcat
      group: tomcat
      remote_src: yes
      extra_opts: "--strip-components=1"
      creates: /usr/share/tomcat/bin


  - name: Copy tomcat service file
    template:
      src: templates/tomcat.service.j2
      dest: /etc/systemd/system/tomcat.service
    when: ansible_service_mgr == "systemd"

  - name: Start and enable tomcat
    service:
      daemon_reload: yes
      name: tomcat
      state: started
      enabled: yes
    when: ansible_service_mgr == "systemd"

  - name: Start and enable firewalld
    service:
      name: firewalld
      state: started
      enabled: yes
    when: ansible_service_mgr == "systemd"

  - name: Open tomcat port on the firewall
    firewalld:
      port: 8080/tcp
      permanent: true
      state: enabled
      immediate: yes
      #when: ansible_service_mgr == "systemd"i

  - name: Replace line in file examples
    replace:
      path: /usr/share/tomcat/conf/server.xml
      regexp: 'Connector port="8080"'
      replace: 'Connector port="9095"'
      #backrefs: yes

  - name: Restart  tomcat
    service:
      daemon_reload: yes
      name: tomcat
      state: restarted
    when: ansible_service_mgr == "systemd"
